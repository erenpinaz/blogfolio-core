@model IPagedList<Blogfolio_CORE.ViewModels.PostItemModel>

@{
    var siteSettings = (Blogfolio_CORE.Areas.Admin.ViewModels.SiteSettingsEditModel)ViewData["SiteSettings"];
    var socialSettings = (Blogfolio_CORE.Areas.Admin.ViewModels.SocialSettingsEditModel)ViewData["SocialSettings"];
}

<section class="blog" itemscope itemtype="http://schema.org/Blog">
    @if (!Model.Any())
    {
        <div class="no-content">
            <div class="vertically-centered">
                <h2>
                    There's nothing here yet.
                </h2>
            </div>
        </div>
    }
    else
    {
        foreach (var post in Model)
        {
            <article class="post" itemscope itemtype="http://schema.org/BlogPosting">
                <header class="post-header">
                    <h1 class="post-title" itemprop="headline">
                        <a href="@Url.Action("Post", new {year = post.DateCreated.Year, month = post.DateCreated.Month, slug = post.Slug})">
                            @post.Title
                        </a>
                    </h1>
                    <div class="post-meta">
                        <time class="post-time" itemprop="datePublished" datetime="@post.DateCreated">
                            <i class="fa fa-clock-o"></i> @post.DateCreated.ToLongDateString()
                        </time>
                        <span class="post-author" itemprop="author">
                            <i>by</i> @post.Author
                        </span>
                        @if (post.CommentsEnabled && !string.IsNullOrWhiteSpace(siteSettings.DisqusShortname))
                        {
                            <span class="post-comments-link">
                                <a href="@Url.Action("Post", new {year = post.DateCreated.Year, month = post.DateCreated.Month, slug = post.Slug})#disqus_thread">
                                    Comments
                                </a>
                            </span>
                        }
                    </div>
                </header>
                <hr />
                <div class="post-content" itemprop="articleBody">
                    @Html.Raw(post.Content)
                </div>
                <hr />
                <footer class="post-footer">
                    <ul class="post-categories">
                        @foreach (var postCategory in post.PostCategories)
                        {
                            <li>
                                <a class="post-category" href="@Url.Action("Category", new {slug = postCategory.Category.Slug})">@postCategory.Category.Name</a>
                            </li>
                        }
                    </ul>
                </footer>
            </article>
        }

        <!-- Pager -->
        @Html.PagedListPager(Model, page => Url.Action("Index", "Blog", new { page = page }), new PagedListRenderOptionsBase
            {
                DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                DisplayLinkToLastPage = PagedListDisplayMode.Never,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                DisplayLinkToIndividualPages = false,
                ContainerDivClasses = new[] { "blog-pager" },
                UlElementClasses = new[] { "pager" },
                ClassToApplyToFirstListItemInPager = "next",
                ClassToApplyToLastListItemInPager = "previous",
                LinkToPreviousPageFormat = "Newer &rarr;",
                LinkToNextPageFormat = "&larr; Older"
            })
    }
</section>